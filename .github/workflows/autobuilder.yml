# https://github.com/ros-tooling/setup-ros
name: jazzy_and_rolling # On Linux, iterates on all ROS 1 and ROS 2 distributions.
on: [push,workflow_dispatch]
jobs:
  test_docker: # On Linux, iterates on all ROS 1 and ROS 2 distributions.
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros_distribution:
          - jazzy
          - rolling

        # Define the Docker image(s) associated with each ROS distribution.
        # The include syntax allows additional variables to be defined, like
        # docker_image in this case. See documentation:
        # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#example-including-configurations-in-a-matrix-build
        #
        # Platforms are defined in REP 3 and REP 2000:
        # https://ros.org/reps/rep-0003.html
        # https://ros.org/reps/rep-2000.html
        include:

          # Jazzy Jalisco (May 2024 - May 2029)
          - docker_image: ubuntu:noble
            ros_distribution: jazzy
            ros_version: 2

          # Rolling Ridley (No End-Of-Life)
          - docker_image: ubuntu:noble
            ros_distribution: rolling
            ros_version: 2
    container:
      image: ${{ matrix.docker_image }}
    steps:
      - name: setup ROS environment
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: ${{ matrix.ros_distribution }}
      - name: install DQ Robotics Devel
        run: |
             sudo apt-get -y install software-properties-common
             sudo add-apt-repository ppa:dqrobotics-dev/development
             sudo apt-get update
             sudo apt-get -y install libdqrobotics libdqrobotics-interface-json11 libdqrobotics-interface-coppeliasim libdqrobotics-interface-coppeliasim-zmq
      - name: Pre Build
        run: |
          cd .devel
          chmod +x prebuild_ros2.sh
          ./prebuild_ros2.sh
      - name: Build
        run: |
          cd .devel
          chmod +x build_ros2.sh
          ./build_ros2.sh